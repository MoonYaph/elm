import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { fetchImage } from '../../actions/AuthedAction';

class ProfileInfo extends Component {


  constructor(props) {
    super(props)
    this.state = {
      error: ''
    }
  }

  changeImgage = (e) => {
   const files = e.target.files || e.dataTransfer.files
   if (files.length) {
     const file = files[0]
     if (file.size / 1024 > 1024) {
       this.setState({ error: '图片过大，请重新上传图片'});
     } else {
      this.props.dispatch(fetchImage(file))
     }
   }
   return false
  }
  handleOut = () => {

  }
  render() {
    const { authed: { userInfo, extra, image } } = this.props;
    const { avatar, username, mobile } = userInfo;

    return [
      <div className="info-item" key="0">
        <span>头像</span>
        <span className="info-file">
          <input type="file" accept='image/jpeg,image/jpg,image/png' onChange={this.changeImgage} />
          {avatar || image ? (
            <img src={image} alt="" className='avatar' />
          ) : (
            <span className="avatar">
              <i className="fa fa-user-circle" />
            </span>
          )}
          <i className="fa fa-angle-right" />
        </span>
      </div>,
      <div className="info-item" key="1">
        <span>用户名</span>
        <span className="info-file">
          <span>{username}</span>
          <i className="fa fa-angle-right" />
        </span>
      </div>,
      <h2 key="2" className="info-title">
        账号绑定
      </h2>,
      <div className="info-item" key="3">
        <span className="mobile">
          <i className="fa fa-mobile" />
          <span>手机</span>
        </span>
        <span className='info-file'>
          <span>{mobile}</span>
          <i className="fa fa-angle-right" />
        </span>
      </div>,
      <h2 key="4" className="info-title">
        安全设置
      </h2>,
      <div className="info-item" key="5">
        <span className="mobile">
          <span>登录密码</span>
        </span>
        <span className='info-file' >
          <span>{extra.is_password_autogenerated ? extra.is_password_autogenerated : '未设置'}</span>
          <i className="fa fa-angle-right" />
        </span>
      </div>,
      <button key='6' className='info-logout' onClick={this.handleOut}>
        退出登录
      </button>
    ];
  }
}
ProfileInfo.propTypes = {
  dispatch: PropTypes.func.isRequired,
  authed: PropTypes.shape({
    userInfo: PropTypes.shape({
      avatar: PropTypes.string,
      username: PropTypes.string
    }).isRequired
  }).isRequired
};
export default ProfileInfo;
